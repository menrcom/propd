#! /bin/sh
#
# /etc/init.d/propagated
#
# System startup script for the propagate daemon
#
### BEGIN INIT INFO
# Provides:       propagated
# Required-Start: $network
# Should-Start:   
# Required-Stop:  
# Should-Stop:	  $network
# Default-Start:  2 3 5
# Default-Stop:   0 1 6
# Short-Description: Propagate service
# Description:    Propagate service
### END INIT INFO

PROP_BIN=/usr/sbin/propagated
test -x $PROP_BIN || exit 5
PIDFILE=/var/run/propagated.pid

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

if [ -f /etc/sysconfig/propagated ]; then
	. /etc/sysconfig/propagated
else
	echo "/etc/sysconfig/propagated does not exists";
	exit -1;
fi

if [ -z "${INTERFACE_ADDR}" -o -z "${MCAST_ADDR}" -o -z "${GATE_ADDR}" ]; then
	echo "Some of: INTERFACE_ADDR,MCAST_ADDR,GATE_ADDR is not set in /etc/sysconfig/propagated";
	exit -1;
fi

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

case "$1" in
    start)
	echo -n "Starting Propagate daemon"

	# NOTE: startproc return 0, even if service is 
	# already running to match LSB spec.
	# 										<mcast IP> <gw IP> [<local IP>] [-d]
		startproc -f -p $PIDFILE $PROP_BIN	${MCAST_ADDR} ${GATE_ADDR} ${INTERFACE_ADDR} -d

	# Remember status and be verbose
		rc_status -v
		/usr/bin/propd_get ${MCAST_ADDR} ${INTERFACE_ADDR}
	;;
    stop)
	echo -n "Shutting down Propagate daemon"
	## Stop daemon with killproc(8) and if this fails
	## set echo the echo return value.

	killproc -TERM -p $PIDFILE $PROP_BIN 

	# Remember status and be verbose
	rc_status -v
	;;
    try-restart)
	## Stop the service and if this succeeds (i.e. the 
	## service was running before), start it again.
	## Note: try-restart is not (yet) part of LSB (as of 0.7.5)
		$0 status >/dev/null &&  $0 restart

	# Remember status and be quiet
	rc_status
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	# Remember status and be quiet
		rc_status
	;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart.

		echo -n "Reload service Prapagate"
		
		checkproc $PROP_BIN
		rc_status -v
		/usr/bin/propd_get ${MCAST_ADDR} ${INTERFACE_ADDR}
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signaling, do nothing (!)

	## Otherwise if it does not support reload:
		rc_status -v
		/usr/bin/propd_get ${MCAST_ADDR} ${INTERFACE_ADDR}
	;;
    status)
	echo -n "Checking for Propagate: "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Status has a slightly different for the status command:
	# 0 - service running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running

	# NOTE: checkproc returns LSB compliant status values.
	checkproc $PROP_BIN
	rc_status -v
	;;
    probe)
	## Optional: Probe for the necessity of a reload,
	## give out the argument which is required for a reload.

	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
	exit 1
	;;
esac
rc_exit
